{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Filter.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","name","nameChange","number","numberChange","value","onChange","type","Person","person","deleteFunc","onClick","Filter","filter","filterChange","Notification","message","className","baseUrl","exportedFunctions","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newSuccessMessage","setNewSuccessMessage","newErrorMessage","setNewErrorMessage","useEffect","contactService","initialContacts","resetInputs","nameExists","find","event","target","preventDefault","newPersonObject","existingPerson","window","confirm","returnedPerson","updatedPersons","map","p","concat","setTimeout","toLowerCase","includes","personToRemove","reponse","catch","error","removePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAyBeA,EAvBI,SAACC,GAClB,IAAQC,EAAqDD,EAArDC,SAAUC,EAA2CF,EAA3CE,KAAMC,EAAqCH,EAArCG,WAAYC,EAAyBJ,EAAzBI,OAAQC,EAAiBL,EAAjBK,aAC5C,OACE,uBAAMJ,SAAUA,EAAhB,UACA,yCACQ,uBACJK,MAAOJ,EACPK,SAAUJ,OAGd,2CACU,uBACNG,MAAOF,EACPG,SAAUF,OAGd,8BACE,wBAAQG,KAAK,SAAb,uBCRSC,EATA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACxB,OACE,+BACGD,EAAOR,KADV,IACiBQ,EAAON,OACtB,wBAAQQ,QAASD,EAAjB,wBCOSE,EAXA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACxB,OACE,qDACoB,uBAChBT,MAAOQ,EACPP,SAAUQ,QCOHC,EAZM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC/B,OAAgB,OAAZD,EACK,KAIP,qBAAKC,UAAWA,EAAhB,SACGD,K,gBCRDE,EAAU,eAuBDC,EADW,CAAEC,OApBb,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBPC,OAfrB,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaCI,OAV7B,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQSO,OALrC,SAACF,GAEd,OADgBT,IAAMY,OAAN,UAAgBf,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UC0H5BS,EAvIH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,IAA7C,mBAAQO,EAAR,KAAmBC,EAAnB,KACA,EAAoDR,mBAAS,MAA7D,mBAAQS,EAAR,KAA2BC,EAA3B,KACA,EAAgDV,mBAAS,MAAzD,mBAAQW,EAAR,KAAyBC,EAAzB,KAEAC,qBAAU,WACRC,EACG7B,SACAG,MAAK,SAAA2B,GACJb,EAAWa,QAEd,IAEH,IAoEMC,EAAc,WAClBZ,EAAW,IACXE,EAAa,KAGTW,EAAa,WAEjB,OADkBhB,EAAQiB,MAAK,SAAA5C,GAAM,OAAIA,EAAOR,OAASqC,MAQ3D,OACE,gCACE,2CAEA,cAAC,EAAD,CAActB,QAAS4B,EAAmB3B,UAAW,YACrD,cAAC,EAAD,CAAcD,QAAS8B,EAAiB7B,UAAW,UAEnD,cAAC,EAAD,CACEJ,OAAQ6B,EACR5B,aA3BqB,SAACwC,GAC1BX,EAAaW,EAAMC,OAAOlD,UA6BxB,kDAEA,cAAC,EAAD,CACEL,SAjGY,SAACsD,GACjBA,EAAME,iBACN,IAAMC,EAAkB,CACtBxD,KAAMqC,EACNnC,OAAQqC,GAEJkB,EAAiBN,IACnBM,GAAkBC,OAAOC,QAAP,UAAkBF,EAAezD,KAAjC,2EACpBgD,EACGpB,OAAO6B,EAAe5B,GAAI2B,GAC1BlC,MAAK,SAAAsC,GACJ,IAAMC,EAAiB1B,EAAQ2B,KAAI,SAAAC,GACjC,OAAIA,EAAElC,KAAO4B,EAAe5B,GACnB,2BAAIkC,GAAX,IAAc7D,OAAQ0D,EAAe1D,SAE9B6D,KAGX3B,EAAWyB,MAGfb,EACGvB,OAAO+B,GACPlC,MAAK,SAAAsC,GACJxB,EAAWD,EAAQ6B,OAAOJ,IAC1BhB,EAAqB,SAAD,OACTgB,EAAe5D,OAE1BiE,YAAW,WACTrB,EAAqB,QACpB,QAITM,KAgEIlD,KAAMqC,EACNpC,WA3CmB,SAACoD,GACxBf,EAAWe,EAAMC,OAAOlD,QA2CpBF,OAAQqC,EACRpC,aAzCqB,SAACkD,GAC1Bb,EAAaa,EAAMC,OAAOlD,UA2CxB,yCAEA,6BA3BK+B,EAAQvB,QAAO,SAAAJ,GAAM,OAAIA,EAAOR,KAAKkE,cAAcC,SAAS1B,MA4B/CqB,KAAI,SAAAtD,GAAM,OACxB,cAAC,EAAD,CAEEA,OAAQA,EACRC,WAAY,kBA1ED,SAAAoB,GACnB,IAAMuC,EAAiBjC,EAAQiB,MAAK,SAAA5C,GAAM,OAAIA,EAAOqB,KAAOA,KACxD6B,OAAOC,QAAP,iBAAyBS,EAAepE,KAAxC,QACFgD,EACGjB,OAAOF,GACPP,MAAK,SAAA+C,GACJjC,EAAWD,EAAQvB,QAAO,SAAAJ,GAAM,OAAIA,EAAOqB,KAAOA,SAEnDyC,OAAM,SAAAC,GACLzB,EAAmB,mBAAD,OACGsB,EAAepE,KADlB,+CAGlBiE,YAAW,WACTnB,EAAmB,QAClB,QA4DiB0B,CAAahE,EAAOqB,MAFjCrB,EAAOqB,aC/HxB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.adbf68cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  const { onSubmit, name, nameChange, number, numberChange } = props\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n    <div>\r\n      name: <input \r\n        value={name}\r\n        onChange={nameChange} \r\n      />\r\n    </div>\r\n    <div>\r\n      number: <input \r\n        value={number}\r\n        onChange={numberChange} \r\n      />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, deleteFunc }) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}\r\n      <button onClick={deleteFunc}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({ filter, filterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input \r\n        value={filter}\r\n        onChange={filterChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exportedFunctions = { getAll, create, update, remove }\r\nexport default exportedFunctions","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm'\r\nimport Person from './components/Person'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport contactService from './services/contacts'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ newSuccessMessage, setNewSuccessMessage ] = useState(null)\r\n  const [ newErrorMessage, setNewErrorMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    contactService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        setPersons(initialContacts)\r\n      })\r\n  }, []) \r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const newPersonObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    const existingPerson = nameExists()\r\n    if (existingPerson && window.confirm(`${existingPerson.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n      contactService\r\n        .update(existingPerson.id, newPersonObject)\r\n        .then(returnedPerson => {\r\n          const updatedPersons = persons.map(p => {\r\n            if (p.id === existingPerson.id) {\r\n              return {...p, number: returnedPerson.number}\r\n            } else {\r\n              return p\r\n            }\r\n          })\r\n          setPersons(updatedPersons)\r\n        })\r\n    } else {\r\n      contactService\r\n        .create(newPersonObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewSuccessMessage(\r\n            `Added ${returnedPerson.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setNewSuccessMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n\r\n    resetInputs()\r\n  }\r\n\r\n  const removePerson = id => {\r\n    const personToRemove = persons.find(person => person.id === id)\r\n    if (window.confirm(`Delete ${personToRemove.name} ?`)) {\r\n      contactService\r\n        .remove(id)\r\n        .then(reponse => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(error => {\r\n          setNewErrorMessage(\r\n            `Information for ${personToRemove.name} has already been removed from the server.`\r\n          )\r\n          setTimeout(() => {\r\n            setNewErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const resetInputs = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const nameExists = () => {\r\n    let foundPerson = persons.find(person => person.name === newName)\r\n    return foundPerson\r\n  }\r\n\r\n  const peopleToShow = () => {\r\n    return persons.filter(person => person.name.toLowerCase().includes(newFilter))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={newSuccessMessage} className={'success'} />\r\n      <Notification message={newErrorMessage} className={'error'} />\r\n\r\n      <Filter \r\n        filter={newFilter}\r\n        filterChange={handleFilterChange}\r\n      />\r\n\r\n      <h2>Add a new person</h2>\r\n\r\n      <PersonForm \r\n        onSubmit={addPerson}\r\n        name={newName}\r\n        nameChange={handleNameChange}\r\n        number={newNumber}\r\n        numberChange={handleNumberChange}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <ul>\r\n        {peopleToShow().map(person => \r\n          <Person \r\n            key={person.id}\r\n            person={person}\r\n            deleteFunc={() => removePerson(person.id)} \r\n          />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}